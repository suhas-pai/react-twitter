/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from "@tanstack/react-router";

// Import Routes

import { Route as rootRoute } from "./routes/__root";

// Create Virtual Routes

const SignupLazyImport = createFileRoute("/signup")();
const NotificationsLazyImport = createFileRoute("/notifications")();
const MessagesLazyImport = createFileRoute("/messages")();
const LoginLazyImport = createFileRoute("/login")();
const IndexLazyImport = createFileRoute("/")();

// Create/Update Routes

const SignupLazyRoute = SignupLazyImport.update({
  id: "/signup",
  path: "/signup",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/signup.lazy").then((d) => d.Route));

const NotificationsLazyRoute = NotificationsLazyImport.update({
  id: "/notifications",
  path: "/notifications",
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import("./routes/notifications.lazy").then((d) => d.Route)
);

const MessagesLazyRoute = MessagesLazyImport.update({
  id: "/messages",
  path: "/messages",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/messages.lazy").then((d) => d.Route));

const LoginLazyRoute = LoginLazyImport.update({
  id: "/login",
  path: "/login",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/login.lazy").then((d) => d.Route));

const IndexLazyRoute = IndexLazyImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/index.lazy").then((d) => d.Route));

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/login": {
      id: "/login";
      path: "/login";
      fullPath: "/login";
      preLoaderRoute: typeof LoginLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/messages": {
      id: "/messages";
      path: "/messages";
      fullPath: "/messages";
      preLoaderRoute: typeof MessagesLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/notifications": {
      id: "/notifications";
      path: "/notifications";
      fullPath: "/notifications";
      preLoaderRoute: typeof NotificationsLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/signup": {
      id: "/signup";
      path: "/signup";
      fullPath: "/signup";
      preLoaderRoute: typeof SignupLazyImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  "/": typeof IndexLazyRoute;
  "/login": typeof LoginLazyRoute;
  "/messages": typeof MessagesLazyRoute;
  "/notifications": typeof NotificationsLazyRoute;
  "/signup": typeof SignupLazyRoute;
}

export interface FileRoutesByTo {
  "/": typeof IndexLazyRoute;
  "/login": typeof LoginLazyRoute;
  "/messages": typeof MessagesLazyRoute;
  "/notifications": typeof NotificationsLazyRoute;
  "/signup": typeof SignupLazyRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/": typeof IndexLazyRoute;
  "/login": typeof LoginLazyRoute;
  "/messages": typeof MessagesLazyRoute;
  "/notifications": typeof NotificationsLazyRoute;
  "/signup": typeof SignupLazyRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: "/" | "/login" | "/messages" | "/notifications" | "/signup";
  fileRoutesByTo: FileRoutesByTo;
  to: "/" | "/login" | "/messages" | "/notifications" | "/signup";
  id: "__root__" | "/" | "/login" | "/messages" | "/notifications" | "/signup";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute;
  LoginLazyRoute: typeof LoginLazyRoute;
  MessagesLazyRoute: typeof MessagesLazyRoute;
  NotificationsLazyRoute: typeof NotificationsLazyRoute;
  SignupLazyRoute: typeof SignupLazyRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  LoginLazyRoute: LoginLazyRoute,
  MessagesLazyRoute: MessagesLazyRoute,
  NotificationsLazyRoute: NotificationsLazyRoute,
  SignupLazyRoute: SignupLazyRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/messages",
        "/notifications",
        "/signup"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/login": {
      "filePath": "login.lazy.tsx"
    },
    "/messages": {
      "filePath": "messages.lazy.tsx"
    },
    "/notifications": {
      "filePath": "notifications.lazy.tsx"
    },
    "/signup": {
      "filePath": "signup.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
